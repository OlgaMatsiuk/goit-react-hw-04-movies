{"version":3,"sources":["components/Reviews/Reviews.js"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","moviesAPI","then","data","results","length","map","id","author","content"],"mappings":"iOA4BeA,EAxBC,WACd,IAAQC,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,qBAAU,WACRC,IAAuBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,EAAKC,cAC5D,CAACT,IAEAG,GAAWA,EAAQO,OAAS,EAE5B,6BACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,+BACE,6BAAKD,IACL,4BAAIC,MAFGF,QASV","file":"static/js/reviews.3463b822.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as moviesAPI from '../../services/movies-api';\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams();\r\n  const [reviews, setReviews] = useState(null);\r\n\r\n  useEffect(() => {\r\n    moviesAPI.fetchReviews(movieId).then(data => setReviews(data.results));\r\n  }, [movieId]);\r\n\r\n  if (reviews && reviews.length > 0) {\r\n    return (\r\n      <ul>\r\n        {reviews.map(({ id, author, content }) => (\r\n          <li key={id}>\r\n            <h3>{author}</h3>\r\n            <p>{content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  return <p>We don't have any reviews for this movie</p>;\r\n};\r\n\r\nexport default Reviews;"],"sourceRoot":""}